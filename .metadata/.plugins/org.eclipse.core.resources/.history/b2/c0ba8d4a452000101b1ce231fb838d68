package com.notify.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.notify.feign.DealerInterface;
import com.notify.model.NotificationPayload;

import jakarta.mail.internet.MimeMessage;

@RestController
@RequestMapping("/notify")
public class NotificationController {

	@Autowired
	private DealerInterface dealerInterface;

	@Autowired
	private JavaMailSender mailSender;
	
	@Autowired
	private RabbitTemplate template;

	@Value("${notification.exchange}")
	private String exchange;

	@Value("${notification.routing-key}")
	private String routingKey;

	@PostMapping("/dealer")
	public ResponseEntity<String> notifyDealers(@RequestBody NotificationPayload payload) {
		try {
			List<String> allEmails = dealerInterface.getAllDealerEmails();

			MimeMessage message = mailSender.createMimeMessage();
			MimeMessageHelper helper = new MimeMessageHelper(message, true);

			helper.setSubject(payload.getSubject());
			helper.setText(payload.getBody(), true);
			helper.setFrom("your-email@gmail.com");
			for (String email : allEmails) {
				helper.addBcc(email);
			}
			mailSender.send(message);
			return ResponseEntity.ok("Notification sent to all dealers");
		} catch (Exception e) {
			return ResponseEntity.status(500).body("Failed to send email: " + e.getMessage());
		}
	}
	
	
	






@PostMapping("/published/now")
public String publishedCrop(@RequestBody CropDto crop) {
	
  
//	template.convertSendAndReceive(exchange, routingKey, "New crop is published Crop Name : "+crop.getCrop_name()+
//			"Crop Type : "+crop.getCrop_type()+"Available Quantity : "+crop.getQuantity_in_kg()+
//			"Price per kg : " + crop.getPrice_per_kg()+" Rs "+"Check App/Website for more details");

   template.convertAndSend(exchange, routingKey, crop);
   return "Crop Notification Send Successfully !!";
}

