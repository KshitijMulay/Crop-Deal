package com.notification.config;


import java.util.Queue;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class RabbitConfig {
	
   public static final String QUEUE = "notificatications_queue";
//    public static final String EXCHANGE = "notification_exchange";
//    public static final String ROUTING_KEY = "route_key";
    
    @Value("${notification.queue}")
    private String queue;

    @Value("${notification.exchange}")
    private String exchange;

    @Value("${notification.routing-key}")
    private String routingKey;
	
	@Bean
	public Queue queue()
	{
		return new Queue(queue);
	}
	
	@Bean
	public TopicExchange exchange()
	{
		return new TopicExchange(exchange);
	}
	
	@Bean
	public Binding binding(Queue queue,TopicExchange exchange)
	{
		return BindingBuilder.bind(queue).to(exchange).with(routingKey);
	}
	
	@Bean
	public MessageConverter converter()
	{
		return new Jackson2JsonMessageConverter();
	}
	
	 @Bean
    public AmqpTemplate template(ConnectionFactory connectionFactory) {
        final RabbitTemplate rabbitTemplate = new RabbitTemplate(connectionFactory);
        rabbitTemplate.setMessageConverter(converter());
        return rabbitTemplate;
    }

}